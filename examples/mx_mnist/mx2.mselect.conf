## Example using mnist but with model selection over one categorical
## hyperparameter (optimizer type) and a real-valued one
mandolin {
    data     = ${?PWD}
    mode     = "train"

    trainer {
    	    train-file = ${mandolin.data}/mnist.10k
	    test-file  = ${mandolin.data}/mnist.t
	    label-file = ${mandolin.data}/mnist.labels
	    dense-vector-size = 784
	    model-file = ${mandolin.data}/mnist.model
	    num-epochs = 20
	    mini-batch-size = 128
	    
	    scale-inputs = true
	    #specification = [{"ltype": "Input"}, {"ltype": "SoftMax"}]
	    ## specification = null
	    
    }

    mx {
       num-classes = 10
       input-type  = mandolin
       gpus = []
       cpus = [0,1]
       save-freq = 4
       train {
       	     optimizer = "sgd"
	     initial-learning-rate = 0.1
	     wd = 0.000001
	     initializer = "xavier"
       }
       ## Basic MLP
       specification {
         fc0 =  {"data": "input", "type": "fc", "num_hidden": 200},
	 act0 = {"data": "fc0", "type":"activation", "act_type": "relu"},
	 fc1 =  {"data": "act0", "type": "fc", "num_hidden": 200},
	 act1 = {"data": "fc1", "type":"activation", "act_type": "relu"},
	 fc2 =  {"data": "act1", "type": "fc", "num_hidden": 200},
	 act2 = {"data": "fc2", "type":"activation", "act_type": "relu"},
	 fcFinal =  {"data": "act2", "type": "fc", "num_hidden": 10},
	 soft1 = {"data": "fcFinal", "type": "softmax"}
       }
    }

    model-selection {
       use-hyperband = "true"
       acquisition-function = "ucb"
       concurrent-evaluations = 4      ## number of model evaluators (threads or Spark jobs)
       threads-per-worker = 1 
       worker-batch-size = 1  ## whether to evaluate mulitple models on separate threads within a worker/job
       score-sample-size = 240 ## number of 
       update-frequency = 2   ## how often to update scoring function
       total-evals = 128       ## how many total models to evaluate before finishing model selection
       categorical = [{"name": "mandolin.mx.train.optimizer", "values": ["sgd","nag","rmsprop"]}]
       real        = [{"name": "mandolin.mx.trainer.initial-learning-rate", "range": [0.001,0.01]}]
       int         = [{"name": "mandolin.mx.specification.fc0.num_hidden", "range": [200,600]}]       
    }
    

}